{"version":3,"file":"ngx-localstorage.js.map","sources":["ng://ngx-localstorage/lib/services/promisable.service.ts","ng://ngx-localstorage/lib/utils.ts","ng://ngx-localstorage/lib/token.ts","ng://ngx-localstorage/lib/services/ngx-localstorage.service.ts","ng://ngx-localstorage/lib/services/storage-event.service.ts","ng://ngx-localstorage/lib/directives/ngx-localstorage.directive.ts","ng://ngx-localstorage/lib/decorators.ts","ng://ngx-localstorage/lib/ngx-localstorage.module.ts"],"sourcesContent":["/**\r\n * Created by bohoffi on 22.05.2017.\r\n*/\r\nimport {ModuleConfig} from '../interfaces';\r\n\r\nexport class PromisableService {\r\n\r\n  private readonly _prefix: string;\r\n  private readonly _allowNull: boolean;\r\n\r\n  constructor(config?: ModuleConfig) {\r\n    if (config) {\r\n      this._prefix = config.prefix || this._prefix;\r\n      this._allowNull = config.allowNull || this._allowNull;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the number of entries in the applications local storage.\r\n   */\r\n  count(): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        resolve(localStorage.length);\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the nth (defined by the index parameter) key in the storage.\r\n   * The order of keys is user-agent defined, so you should not rely on it.\r\n   * @param index   An integer representing the number of the key you want to get the name of. This is a zero-based index.\r\n   */\r\n  getKey(index: number): Promise<string | null> {\r\n    return new Promise<string | null>((resolve, reject) => {\r\n      if (index < 0) {\r\n        reject(new Error('index has to be 0 or greater'));\r\n      }\r\n      try {\r\n        resolve(localStorage.key(index));\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds tha value with the given key or updates an existing entry.\r\n   * @param key     Key to store.\r\n   * @param value   Value to store.\r\n   * @param prefix  Optional prefix to overwrite the configured one.\r\n   */\r\n  set(key: string, value: string, prefix?: string): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this._allowNull\r\n          || (!this._allowNull && value !== 'null' && value !== null && value !== undefined)) {\r\n          localStorage.setItem(`${prefix || this._prefix}_${key}`, value);\r\n        } else {\r\n          return this.remove(key, prefix);\r\n        }\r\n        resolve(true);\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets the entry specified by the given key or null.\r\n   * @param key     Key identifying the wanted entry.\r\n   * @param prefix  Optional prefix to overwrite the configured one.\r\n   */\r\n  get(key: string, prefix?: string): Promise<string | null> {\r\n    return new Promise<string | null>((resolve, reject) => {\r\n      try {\r\n        resolve(localStorage.getItem(`${prefix || this._prefix}_${key}`));\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes the entry specified by the given key.\r\n   * @param key     Key identifying the entry to remove.\r\n   * @param prefix  Optional prefix to overwrite the configured one.\r\n   */\r\n  remove(key: string, prefix?: string): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        localStorage.removeItem(`${prefix || this._prefix}_${key}`);\r\n        resolve(true);\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clears all entries of the applications local storage.\r\n   */\r\n  clear(): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        localStorage.clear();\r\n        resolve(true);\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Created by bohoffi on 04.04.2017.\r\n */\r\nimport {ModuleConfig} from './interfaces';\r\n\r\nexport const getProperty = (path: string[], object: any) =>\r\n  path.reduce((obj: any, p: any) => (!!obj) ? obj[p] : null, object);\r\n\r\nexport const setProperty = (path: string[] | string, value: any, object: any, falsyTransformer?: () => any) => {\r\n  const lastKeyIndex = path.length - 1;\r\n  for (let i = 0; i < lastKeyIndex; ++i) {\r\n    const key = path[i];\r\n    if (!(key in object)) {\r\n      object[key] = {};\r\n    }\r\n    object = object[key];\r\n  }\r\n  object[path[lastKeyIndex]] = (!value || (typeof value === 'string' && value === 'false'))\r\n  && !!falsyTransformer ? falsyTransformer() : value;\r\n};\r\n\r\nexport const defaultConfig: ModuleConfig = {\r\n  allowNull: true,\r\n  prefix: 'ngx_local_storage'\r\n};\r\n","import {ModuleConfig} from './interfaces';\r\nimport {InjectionToken} from '@angular/core';\r\n\r\nexport const ModuleConfigToken = new InjectionToken<ModuleConfig>('moduleConfig');\r\n","import {Injectable, Optional, Inject} from '@angular/core';\r\n\r\nimport {ModuleConfig} from '../interfaces';\r\nimport {PromisableService} from './promisable.service';\r\nimport {defaultConfig} from '../utils';\r\nimport { ModuleConfigToken } from '../token';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class LocalStorageService {\r\n  private readonly _prefix: string;\r\n  private readonly _allowNull: boolean;\r\n  private readonly _promisable: PromisableService;\r\n\r\n  constructor(@Inject(ModuleConfigToken) config?: ModuleConfig) {\r\n    if (config) {\r\n      this._prefix = config.prefix || defaultConfig.prefix;\r\n      this._allowNull = config.allowNull || defaultConfig.allowNull;\r\n    }\r\n    this._promisable = new PromisableService({\r\n      allowNull: this._allowNull,\r\n      prefix: this._prefix\r\n    });\r\n  }\r\n\r\n  asPromisable(): PromisableService {\r\n    return this._promisable;\r\n  }\r\n\r\n  /**\r\n   * Gets the number of entries in the applications local storage.\r\n   */\r\n  count(): number | undefined {\r\n    try {\r\n      return localStorage.length;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the nth (defined by the index parameter) key in the storage.\r\n   * The order of keys is user-agent defined, so you should not rely on it.\r\n   * @param index   An integer representing the number of the key you want to get the name of. This is a zero-based index.\r\n   */\r\n  getKey(index: number): string | null | undefined {\r\n    if (index < 0) {\r\n      console.error(new Error('index has to be 0 or greater'));\r\n    }\r\n    try {\r\n      return localStorage.key(index);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds tha value with the given key or updates an existing entry.\r\n   * @param key     Key to store.\r\n   * @param value   Value to store.\r\n   * @param prefix  Optional prefix to overwrite the configured one.\r\n   */\r\n  set(key: string, value: string, prefix?: string): void {\r\n    if (\r\n      this._allowNull ||\r\n      (!this._allowNull &&\r\n        value !== 'null' &&\r\n        value !== null &&\r\n        value !== undefined)\r\n    ) {\r\n      localStorage.setItem(`${prefix || this._prefix}_${key}`, value);\r\n    } else {\r\n      this.remove(key, prefix);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the entry specified by the given key or null.\r\n   * @param key     Key identifying the wanted entry.\r\n   * @param prefix  Optional prefix to overwrite the configured one.\r\n   */\r\n  get(key: string, prefix?: string): string | null | undefined {\r\n    try {\r\n      return localStorage.getItem(`${prefix || this._prefix}_${key}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes the entry specified by the given key.\r\n   * @param key     Key identifying the entry to remove.\r\n   * @param prefix  Optional prefix to overwrite the configured one.\r\n   */\r\n  remove(key: string, prefix?: string): void {\r\n    try {\r\n      localStorage.removeItem(`${prefix || this._prefix}_${key}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears all entries of the applications local storage.\r\n   */\r\n  clear(): void {\r\n    try {\r\n      localStorage.clear();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Created by bohoffi on 31.01.2018.\r\n */\r\nimport {Injectable} from '@angular/core';\r\nimport {fromEvent as observableFromEvent, BehaviorSubject, Observable} from 'rxjs';\r\nimport {share, filter} from 'rxjs/operators';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StorageEventService {\r\n\r\n  private _eventStream: BehaviorSubject<StorageEvent> = new BehaviorSubject<StorageEvent>(null);\r\n\r\n  constructor() {\r\n    observableFromEvent(window, 'storage')\r\n      .subscribe((ev: StorageEvent) => this._eventStream.next(ev));\r\n  }\r\n\r\n  get stream(): Observable<StorageEvent> {\r\n    return this._eventStream\r\n      .asObservable().pipe(\r\n        filter(ev => !!ev),\r\n        share()\r\n      );\r\n  }\r\n}\r\n","/**\r\n * Created by bohoffi on 03.04.2017.\r\n */\r\nimport {AfterViewInit, Directive, ElementRef, EventEmitter, Input, OnDestroy, Output} from '@angular/core';\r\nimport {fromEvent as observableFromEvent, Subscription} from 'rxjs';\r\nimport {debounceTime, filter} from 'rxjs/operators';\r\n\r\nimport {getProperty, setProperty} from '../utils';\r\nimport {LocalStorageService} from '../services/ngx-localstorage.service';\r\nimport {StorageEventService} from '../services/storage-event.service';\r\n\r\n@Directive({\r\n  selector: '[ngxLocalStorage]'\r\n})\r\nexport class LocalStorageDirective implements AfterViewInit, OnDestroy {\r\n\r\n  @Input('ngxLocalStorage')\r\n  lsKey: string;\r\n  @Input()\r\n  lsPrefix: string;\r\n  @Input()\r\n  lsEvent: string;\r\n  @Input()\r\n  lsDebounce = 0;\r\n  @Input()\r\n  lsInitFromStorage = false;\r\n  @Input()\r\n  lsFalsyTransformer?: () => any;\r\n\r\n  @Output()\r\n  lsStoredValue = new EventEmitter<any>();\r\n\r\n  private _eventSubscription: Subscription;\r\n  private _valuePath: string[] = [];\r\n\r\n  constructor(private er: ElementRef,\r\n              private lss: LocalStorageService,\r\n              private es: StorageEventService) {\r\n\r\n    this.es.stream.pipe(\r\n    // TODO: filter should be more accurate\r\n      filter((ev: StorageEvent) => ev.key.indexOf(this.lsKey) >= 0)\r\n    )\r\n      .subscribe((ev: StorageEvent) => {\r\n        setProperty(this._valuePath.length ? this._valuePath : ['value'], ev.newValue, this.er.nativeElement, this.lsFalsyTransformer);\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._initKey();\r\n    this._initFromStorage();\r\n    this._hookEvent();\r\n  }\r\n\r\n  @Input()\r\n  set lsValuePath(path: any[] | string) {\r\n    if (path != null) {\r\n      this._valuePath = Array.isArray(path) ? path : path.split(',');\r\n    } else {\r\n      this._valuePath = [];\r\n    }\r\n  }\r\n\r\n  private _initKey(): void {\r\n    if (!this.lsKey) {\r\n      if (!this.er.nativeElement.id && !this.er.nativeElement.name) {\r\n        throw new Error('No key or element id or name supplied!');\r\n      }\r\n      this.lsKey = this.er.nativeElement.id || this.er.nativeElement.name;\r\n    }\r\n  }\r\n\r\n  private _hookEvent(): void {\r\n    if (this.lsEvent) {\r\n      this._eventSubscription = observableFromEvent(this.er.nativeElement, this.lsEvent).pipe(\r\n        debounceTime(this.lsDebounce))\r\n        .subscribe(() => {\r\n          this.lss.asPromisable().set(this.lsKey,\r\n            getProperty(this._valuePath.length ? this._valuePath : ['value'], this.er.nativeElement),\r\n            this.lsPrefix)\r\n            .then(() => {\r\n              this.lss.asPromisable().get(this.lsKey, this.lsPrefix)\r\n                .then((value: any) => {\r\n                  this.lsStoredValue.emit(value);\r\n                })\r\n                .catch((err: Error) => console.error(err));\r\n            })\r\n            .catch((err: Error) => console.error(err));\r\n        });\r\n    }\r\n  }\r\n\r\n  private _initFromStorage(): void {\r\n    if (this.lsInitFromStorage) {\r\n      this.lss.asPromisable().get(this.lsKey, this.lsPrefix)\r\n        .then((storedValue: any) => {\r\n          setProperty(this._valuePath.length ? this._valuePath : ['value'], storedValue, this.er.nativeElement, this.lsFalsyTransformer);\r\n        })\r\n        .catch((err: Error) => console.error(err));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._eventSubscription && !this._eventSubscription.closed) {\r\n      this._eventSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Created by bohoffi on 22.05.2017.\r\n */\r\nimport {filter} from 'rxjs/operators';\r\n\r\nimport {DecoratorOpts} from './interfaces';\r\nimport {LocalStorageService} from './services/ngx-localstorage.service';\r\nimport {StorageEventService} from './services/storage-event.service';\r\n\r\nexport function ngxLocalStorage(options?: DecoratorOpts) {\r\n  return function (target: Object, propertyDescription: string) {\r\n\r\n    const service: LocalStorageService = new LocalStorageService({\r\n      prefix: !!options && !!options.prefix ? options.prefix : ''\r\n    });\r\n\r\n    const key = !!options && !!options.key ? options.key : propertyDescription;\r\n\r\n    const eventService: StorageEventService = new StorageEventService();\r\n    eventService.stream.pipe(\r\n      // TODO: filter should be more accurate\r\n      filter((ev: StorageEvent) => ev.key.indexOf(key) >= 0)\r\n    )\r\n      .subscribe((ev: StorageEvent) => {\r\n        if (!!ev.newValue && typeof ev.newValue === 'string') {\r\n          if (ev.newValue !== 'null') {\r\n            target[propertyDescription] = ev.newValue;\r\n          } else {\r\n            target[propertyDescription] = !!options.nullTransformer ? options.nullTransformer() : null;\r\n          }\r\n        }\r\n      });\r\n\r\n    Object.defineProperty(target, propertyDescription, {\r\n      get: function () {\r\n        const storageValue = service.get(key);\r\n        return storageValue == null && !!options.nullTransformer ? options.nullTransformer() : storageValue;\r\n      },\r\n      set: function (value: any) {\r\n        service.set(key, value);\r\n      }\r\n    });\r\n  };\r\n}\r\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\r\n\r\nimport {ModuleConfig} from './interfaces';\r\nimport {LocalStorageService} from './services/ngx-localstorage.service';\r\nimport {StorageEventService} from './services/storage-event.service';\r\nimport {LocalStorageDirective} from './directives/ngx-localstorage.directive';\r\nimport {ModuleConfigToken} from './token';\r\n\r\nexport function provideStorageService(moduleConfig: ModuleConfig): LocalStorageService {\r\n  return new LocalStorageService(moduleConfig);\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [\r\n    LocalStorageDirective\r\n  ],\r\n  exports: [\r\n    LocalStorageDirective\r\n  ]\r\n})\r\nexport class NgxLocalStorageModule {\r\n  static forRoot(config?: ModuleConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxLocalStorageModule,\r\n      providers: [\r\n        {\r\n          provide: ModuleConfigToken,\r\n          useValue: config\r\n        },\r\n        {\r\n          provide: LocalStorageService,\r\n          useFactory: provideStorageService,\r\n          deps: [\r\n            ModuleConfigToken\r\n          ]\r\n        },\r\n        StorageEventService\r\n      ]\r\n    };\r\n  }\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule: NgxLocalStorageModule) {\r\n    if (parentModule) {\r\n      throw new Error('NgxLocalStorageModule is already loaded. Import it in the AppModule only');\r\n    }\r\n  }\r\n}\r\n"],"names":["observableFromEvent"],"mappings":"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"}
